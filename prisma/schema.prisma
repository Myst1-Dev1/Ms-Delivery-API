// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String       @unique
  password   String
  address    String?
  zipCode    String?
  isAdmin    Boolean
  orders     Orders[]
  avaliations Avaliation[]
  restaurants Restaurant[] @relation("UserToRestaurant")
}

model Restaurant {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  logo        String
  banner      String
  address     String
  description String
  type        String
  isOpen      Boolean
  menuOptions String[]
  dishes      Dishes[]
  orders      Orders[]
  avaliations Avaliation[]
  user        User     @relation(fields: [userId], references: [id], name: "UserToRestaurant")
  userId      String   @db.ObjectId
}

model Dishes {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String
  price         Float
  image         String
  menuOption    String
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId  String     @db.ObjectId
}

model Orders {
  id                       String     @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  user                     User    @relation(fields: [userId], references: [id])
  restaurantId             String  @db.ObjectId
  restaurant               Restaurant    @relation(fields: [restaurantId], references: [id])
  userName                 String
  address                  String
  zipCode                  String
  orderProductsName        String[]
  orderProductsImage       String[]
  orderProductsObservation String[]
  orderValue               Float
  status                   String
  createdAt                DateTime @default(now())
}

model Avaliation {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  stars        Int        
  comment      String
  userName     String
  createdAt    DateTime   @default(now())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String     @db.ObjectId
  user         User?      @relation(fields: [userId], references: [id])
  userId       String?    @db.ObjectId
}